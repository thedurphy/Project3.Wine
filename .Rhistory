load("C:/Users/Ethan Hunt/Documents/LoL.RData")
system.time(c.ind6 <- sumGames(as.character(bigtest2$Summoner[ind6]), delay = 5))
bigtest2[ind1]
bigtest2[ind1,]
bigtest2$Summoner[ind1]
as.character(bigtest2$Summoner[ind1])
source('C:/Users/Ethan Hunt/Google Drive/Projects/LoL.R/sumGames.R')
system.time(c.ind6 <- sumGames(as.character(bigtest2$Summoner[ind6]), delay = 5))
system.time(c.ind6 <- sumGames(as.character(bigtest2$Summoner[ind6]), delay = 5))
install.packages(c("boot", "car", "class", "cluster", "codetools", "colorspace", "data.table", "digest", "evaluate", "foreign", "formatR", "ggplot2", "highr", "KernSmooth", "knitr", "labeling", "lattice", "manipulate", "markdown", "MASS", "Matrix", "mgcv", "mime", "nlme", "nnet", "RColorBrewer", "Rcpp", "reshape2", "rpart", "spatial", "survival"))
setwd("~/Project3.Wine/Project")
set.seed(9486)
packages <- c('GGally', 'scales', 'memisc', 'lattice', 'MASS', 'car', 'reshape', 'plyr', 'ggplot2', 'scales', 'knitr', 'corrplot', 'gridExtra', 'plotrix')
sapply(packages, require, character.only = T)
rw <- read.csv('wineQualityReds.csv')
rw$X <- NULL
rw$type <- rep('rw', length(rw$quality))
ww <- read.csv('wineQualityWhites.csv')
ww$X <- NULL
ww$type <- rep('ww', length(ww$quality))
allwines <- rbind(rw, ww)
eqwines <- rbind(rw, ww[sample(1:nrow(ww), nrow(rw), replace=F),])
allwines$type <- factor(allwines$type,
labels = c('Red Wine', 'White Wine'))
eqwines$type <- factor(eqwines$type,
labels = c('Red Wine', 'White Wine'))
nor <- function(x) {
(x - min(x))/(max(x) - min(x))
}
noeq <- data.frame(apply(eqwines[,1:12], 2, nor))
noeq$quality <- eqwines$quality
noeq$type <- eqwines$type
noeq.melt <- melt(noeq, id = c('quality', 'type'))
noall <- data.frame(apply(allwines[,1:12], 2, nor))
noall$quality <- allwines$quality
noall$type <- allwines$type
noall.melt <- melt(noall, id = c('quality', 'type'))
ggplot(aes(x = quality, y = value, color = type),
data = noeq.melt) +
geom_jitter() +
geom_smooth() +
facet_wrap(~variable) +
labs(color = 'Wine Type') +
ggtitle('Quality Relationship to\nthe Variables\nEqualized') +
scale_x_continuous(breaks = seq(0, max(noall.melt$quality), 1)) +
xlab('Quality Level') +
ylab('Normalized Value')
View(noeq.melt)
eq.melt <- melt(eqwines, id = c('quality', 'type'))
View(eq.melt)
ggplot(aes(x = quality, y = value, color = type),
data = eq/melt) +
geom_jitter() +
geom_smooth() +
facet_wrap(~variable, scales = 'free') +
labs(color = 'Wine Type') +
ggtitle('Quality Relationship to\nthe Variables\nEqualized') +
scale_x_continuous(breaks = seq(0, max(noall.melt$quality), 1)) +
xlab('Quality Level') +
ylab('Normalized Value')
ggplot(aes(x = quality, y = value, color = type),
data = eq.melt) +
geom_jitter() +
geom_smooth() +
facet_wrap(~variable, scales = 'free') +
labs(color = 'Wine Type') +
ggtitle('Quality Relationship to\nthe Variables\nEqualized') +
scale_x_continuous(breaks = seq(0, max(noall.melt$quality), 1)) +
xlab('Quality Level') +
ylab('Normalized Value')
